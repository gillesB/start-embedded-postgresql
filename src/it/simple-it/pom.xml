<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>lu.gbaatz.it</groupId>
	<artifactId>jooq-it</artifactId>
	<version>1.0-SNAPSHOT</version>

	<description>An IT verifying that a Postgres instance is started.
	This is checked by generating JOOQ classes.
	</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jooq.version>3.11.7</jooq.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
			<version>${jooq.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>@project.groupId@</groupId>
				<artifactId>@project.artifactId@</artifactId>
				<version>@project.version@</version>
				<executions>
					<execution>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<flywayDirectory>src/test/resources/db/migration</flywayDirectory>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<version>${jooq.version}</version>

				<!-- The plugin should hook into the generate goal -->
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>

				<!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL 
					database -->
				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>42.2.5</version>
					</dependency>
				</dependencies>
				<!-- Specify the plugin configuration. The configuration format is the 
					same as for the standalone code generator -->
				<configuration>

					<!-- JDBC connection parameters -->
					<jdbc>
						<driver>org.postgresql.Driver</driver>
						<url>jdbc:postgresql://${pgHost}:${pgPort}/${pgDbName}</url>
						<user>${pgUser}</user>
						<password>${pgPw}</password>
					</jdbc>

					<!-- Generator parameters -->
					<generator>
						<database>
							<name>org.jooq.meta.postgres.PostgresDatabase</name>
							<includes>.*</includes>
							<excludes>flyway_schema_history</excludes>
							<!-- In case your database supports catalogs, e.g. SQL Server: <inputCatalog>public</inputCatalog> -->
							<inputSchema>public</inputSchema>
						</database>
						<target>
							<packageName>lu.gbaatz.xml_generator.db_model</packageName>
							<directory>target/generated-sources/jooq</directory>
						</target>
					</generator>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
